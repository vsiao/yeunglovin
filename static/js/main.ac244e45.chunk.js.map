{"version":3,"sources":["App.js","index.js"],"names":["App","basename","Splash","AboutUs","Details","RSVP","words","celebrationText","Math","floor","random","length","ScrollRoute","exact","path","className","to","setHeight","children","match","ScrollSection","useState","rootNode","setRootNode","rootRef","useCallback","node","shouldScroll","isExact","useEffect","scrollIntoView","behavior","block","ref","cx","ReactDOM","render","document","getElementById"],"mappings":"wRAgBeA,MAXf,WACE,OACE,kBAAC,IAAD,CAAYC,SAAS,KACnB,kBAACC,EAAD,MACA,kBAACC,EAAD,MACA,kBAACC,EAAD,MACA,kBAACC,EAAD,QAON,SAASH,IACP,IAAMI,EAAQ,CAAC,OAAQ,YAAa,iBAAa,aAAS,gBAEpDC,EAAmBD,EADPE,KAAKC,MAAMD,KAAKE,SAAWF,KAAKC,MAAMH,EAAMK,UAG9D,OAAO,kBAACC,EAAD,CAAaC,OAAK,EAACC,KAAK,IAAIC,UAAU,UAC3C,yBAAKA,UAAU,kBACb,wBAAIA,UAAU,gBAAd,YACA,wBAAIA,UAAU,mBAAd,uBACA,yBAAKA,UAAU,kBAAf,yBACA,yBAAKA,UAAU,eACZR,EADH,IACoB,0BAAMQ,UAAU,gBAAhB,YAGtB,wBAAIA,UAAU,cACZ,wBAAIA,UAAU,kBACZ,kBAAC,IAAD,CAAMC,GAAG,MAAMD,UAAU,kBAAzB,aAIF,wBAAIA,UAAU,kBACZ,kBAAC,IAAD,CAAMC,GAAG,WAAWD,UAAU,kBAA9B,YAIF,wBAAIA,UAAU,kBACZ,kBAAC,IAAD,CAAMC,GAAG,QAAQD,UAAU,kBAA3B,WAQR,SAASZ,IACP,OAAO,kBAACS,EAAD,CAAaE,KAAK,MAAMC,UAAU,WAAlC,cAKT,SAASX,IACP,OAAO,kBAACQ,EAAD,CAAaE,KAAK,WAAWC,UAAU,WAAvC,kCAKT,SAASV,IACP,OAAO,kBAACO,EAAD,CAAaE,KAAK,QAAQC,UAAU,QAApC,oBAKT,SAASH,EAAT,GAAgE,IAAzCE,EAAwC,EAAxCA,KAAMC,EAAkC,EAAlCA,UAAWE,EAAuB,EAAvBA,UAAWC,EAAY,EAAZA,SACjD,OAAO,kBAAC,IAAD,CAAOJ,KAAMA,IACjB,gBAAGK,EAAH,EAAGA,MAAH,OACC,kBAACC,EAAD,CACED,MAAOA,EACPJ,UAAWA,EACXE,UAAWA,EACXC,SAAUA,OAKlB,SAASE,EAAT,GAAmE,IAA1CD,EAAyC,EAAzCA,MAAOJ,EAAkC,EAAlCA,UAAsBG,GAAY,EAAvBD,UAAuB,EAAZC,UAAY,EAChCG,mBAAS,MADuB,mBACzDC,EADyD,KAC/CC,EAD+C,KAI1DC,EAAUC,uBAAY,SAAAC,GAC1BH,EAAYG,KAIX,IAGGC,EAAeR,GAASA,EAAMS,SAAWN,EAO/C,OANAO,qBAAU,WACJF,GACFL,EAASQ,eAAe,CAAEC,SAAU,SAAUC,MAAO,YAEtD,CAACL,EAAcL,IAEX,6BAASW,IAAKT,EAAST,UAAWmB,IAAG,gBAAiBnB,IAC1DG,GCjGLiB,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.ac244e45.chunk.js","sourcesContent":["import cx from \"classnames\";\nimport React, { useCallback, useEffect, useState } from 'react';\nimport { HashRouter, Route, Link } from 'react-router-dom';\nimport './App.css';\n\nfunction App() {\n  return (\n    <HashRouter basename=\"/\">\n      <Splash />\n      <AboutUs />\n      <Details />\n      <RSVP />\n    </HashRouter>\n  );\n}\n\nexport default App;\n\nfunction Splash() {\n  const words = ['Yay!', 'coolbeans', 'Okay, so…', 'And…?', 'Tell me more'];\n  const randIndex = Math.floor(Math.random() * Math.floor(words.length));\n  const celebrationText =  words[randIndex];\n\n  return <ScrollRoute exact path=\"/\" className=\"Splash\">\n    <div className=\"Splash-wrapper\">\n      <h1 className=\"Splash-title\">10.10.20</h1>\n      <h2 className=\"Splash-subtitle\">Stephanie & Vincent</h2>\n      <div className=\"Splash-sticker\">(are getting married)</div>\n      <div className=\"Splash-okay\">\n        {celebrationText} <span className=\"Splash-arrow\">↓</span>\n      </div>\n    </div>\n    <ul className=\"Splash-nav\">\n      <li className=\"Splash-navItem\">\n        <Link to=\"/us\" className=\"Splash-navLink\">\n          About us\n        </Link>\n      </li>\n      <li className=\"Splash-navItem\">\n        <Link to=\"/details\" className=\"Splash-navLink\">\n          Details\n        </Link>\n      </li>\n      <li className=\"Splash-navItem\">\n        <Link to=\"/rsvp\" className=\"Splash-navLink\">\n          RSVP\n        </Link>\n      </li>\n    </ul>\n  </ScrollRoute>;\n}\n\nfunction AboutUs() {\n  return <ScrollRoute path=\"/us\" className=\"AboutUs\">\n    woah there\n  </ScrollRoute>;\n}\n\nfunction Details() {\n  return <ScrollRoute path=\"/details\" className=\"Details\">\n    we're still under construction\n  </ScrollRoute>;\n}\n\nfunction RSVP() {\n  return <ScrollRoute path=\"/rsvp\" className=\"RSVP\">\n    come back later!\n  </ScrollRoute>;\n}\n\nfunction ScrollRoute({ path, className, setHeight, children }) {\n  return <Route path={path}>\n    {({ match }) =>\n      <ScrollSection\n        match={match}\n        className={className}\n        setHeight={setHeight}\n        children={children}\n      />}\n  </Route>;\n}\n\nfunction ScrollSection({ match, className, setHeight, children }) {\n  const [rootNode, setRootNode] = useState(null);\n\n  // Measure and set the height of this section, once on mount\n  const rootRef = useCallback(node => {\n    setRootNode(node);\n    if (node !== null) {\n      // setHeight(node.getBoundingClientRect().height);\n    }\n  }, []);\n\n  // If we navigated to this section, scroll it into view\n  const shouldScroll = match && match.isExact && rootNode;\n  useEffect(() => {\n    if (shouldScroll) {\n      rootNode.scrollIntoView({ behavior: \"smooth\", block: \"start\" });\n    }\n  }, [shouldScroll, rootNode]);\n\n  return <section ref={rootRef} className={cx(\"ScrollSection\", className)}>\n    {children}\n  </section>;\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}